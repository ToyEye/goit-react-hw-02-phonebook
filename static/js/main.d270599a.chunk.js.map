{"version":3,"sources":["Components/Container/Container.styled.js","Components/Button/Button.styled.js","Components/FormComponents/FormComponents.styled.js","Components/Form/Form.styled.js","Components/Section/Section.styled.js","Components/ContactList/ContactList.styled.js","Components/Filter/Filter.js","App.js","index.js"],"names":["Container","styled","div","Button","button","ImputEnter","input","InputType","label","InputText","p","FormStyled","form","Form","state","name","number","handleChange","evt","target","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","type","pattern","title","placeholder","required","onChange","Component","Section","section","Title","h1","ContactStyledList","ul","ContactItem","li","ContactName","ContactList","contacts","onDeleteItem","map","id","onClick","prototype","PropTypes","func","objectOf","shape","string","Filter","App","filter","addContact","contact","includes","newContact","nanoid","alert","deleteItem","itemId","prevState","filterEnter","filterChange","normalizeFilter","toLocaleLowerCase","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d270599a.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\n\r\nconst Container = styled.div`\r\n  max-width: 1120px;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  padding-left: 15px;\r\n  padding-right: 15px;`\r\n\r\n  export  {Container};","import styled from '@emotion/styled';\r\n\r\nconst Button = styled.button`\r\n    padding: 5px 15px;\r\n    width: 110px;\r\n    margin-right:auto;\r\n    margin-left:auto;\r\n    border:none;\r\n    border-radius:5px;\r\n     filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));\r\n`\r\n\r\n\r\n// const Button = ({onDelete, children,idItem }) => {\r\n//     return (\r\n//         <StyledButton onClick={() => onDelete(idItem)}>\r\n//             {children}\r\n//         </StyledButton>\r\n//     )\r\n// };\r\nexport default Button","import styled from '@emotion/styled';\r\n\r\nconst ImputEnter = styled.input`\r\nwidth: 220px;\r\n    padding:5px 15px;\r\n    border-radius:5px;\r\n    border-color:#d4d4d4;\r\n    \r\n    &:hover,&:active {\r\n        border-color:#7cb1ec;\r\n    }\r\n`\r\nconst InputType = styled.label`\r\n    margin-bottom: 10px;\r\n    `\r\n\r\nconst InputText = styled.p`\r\n    margin-bottom:5px;\r\n    `\r\n\r\n\r\nexport { ImputEnter,InputType,InputText };\r\n","import React, { Component } from 'react';\r\nimport styled from '@emotion/styled';\r\nimport PropTypes from 'prop-types';\r\nimport Button from \"../Button\";\r\nimport { ImputEnter, InputType, InputText } from \"../FormComponents\";\r\n\r\nconst FormStyled = styled.form`\r\ndisplay: flex;\r\nflex-direction: column;\r\n    margin-left:auto;\r\n    margin-right:auto;\r\n    width:450px;\r\n    padding: 10px 15px;\r\n    border: 1px solid black;\r\n    border-radius:5px;\r\n`\r\n\r\nclass Form extends Component{\r\n\r\n    state = {\r\n        name: '',\r\n        number:''\r\n    }\r\n\r\nhandleChange = evt => {\r\n  const { name, value } = evt.target\r\n  this.setState({ [name]: value });\r\n};\r\n  \r\nhandleSubmit = evt => {\r\n  evt.preventDefault();\r\n  \r\n  this.props.onSubmit(this.state)\r\n  this.reset()\r\n};\r\n  \r\nreset = () => {\r\n  this.setState({ name: '', number:'' });\r\n};\r\n    render() {\r\n        return (\r\n            <FormStyled onSubmit={this.handleSubmit}>\r\n                <InputType> <InputText>Name</InputText>\r\n                    <ImputEnter\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n                        placeholder='Enter your name'\r\n                        required\r\n                        value={this.state.name}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </InputType>\r\n                <InputType> <InputText>Name</InputText>\r\n                    <ImputEnter\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n                        required\r\n                        placeholder='Enter your number'\r\n                        value={this.state.number}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </InputType>\r\n                <Button type='submit'>Add contact</Button>\r\n            </FormStyled>\r\n        );\r\n    }\r\n}\r\n\r\nForm.propTypes = {\r\n    state: PropTypes.objectOf(PropTypes.shape({\r\n        name: PropTypes.string,\r\n        number:PropTypes.number,\r\n    })),\r\n    handleChange: PropTypes.func,\r\n    handleSubmit: PropTypes.func\r\n}\r\n\r\nexport default Form;","import styled from '@emotion/styled';\r\n\r\nconst Section = styled.section`\r\n    margin-top: 25px;\r\n    margin-bottom: 25px;\r\n  text-align:center;\r\n`\r\n\r\nconst Title = styled.h1`\r\n    font-weigth: 400;\r\n    font-size: 20px;\r\n    margin-bottom: 25px;\r\n    text-align:center;\r\n`\r\n\r\nexport {Section,Title}","import React from \"react\";\r\nimport styled from '@emotion/styled';\r\nimport Button from \"../Button\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactStyledList = styled.ul`\r\n    width: 450px;\r\n    padding: 15px;\r\n    margin-left:auto;\r\n    margin-right:auto;\r\n    margin-top:10px;\r\n    border: 1px solid black;\r\n    border-radius: 5px;\r\n`\r\nconst ContactItem = styled.li`\r\n    color: black;\r\n    &:not(:last-child){\r\n         margin-bottom: 25px\r\n    };\r\n`\r\n\r\nconst ContactName = styled.p`\r\n    color:black;\r\n    margin-bottom: 15px;\r\n`\r\n\r\nconst ContactList = ({ contacts, onDeleteItem }) => (\r\n    <ContactStyledList>\r\n        {contacts.map(({ name, id, number }) =>\r\n            <ContactItem key={id} id={id}>\r\n                <ContactName>\r\n                    {name} : {number}\r\n                </ContactName>\r\n                <Button\r\n                    onClick={() => onDeleteItem(id)}\r\n                    type=\"button\">\r\n                    Delete\r\n                </Button>\r\n            </ContactItem>)}\r\n    </ContactStyledList>\r\n);\r\n\r\nContactList.prototype = {\r\n    onDeleteItem: PropTypes.func,\r\n    contacts: PropTypes.objectOf(PropTypes.shape({\r\n        name: PropTypes.string,\r\n        number: PropTypes.number,\r\n       id: PropTypes.string, \r\n    }))\r\n}\r\n\r\nexport default ContactList;","import React  from 'react'\r\nimport { ImputEnter, InputType, InputText } from \"../FormComponents\";\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Filter = ({onChange}) => {\r\n    return (   \r\n        <InputType onChange={onChange}>\r\n            <InputText>Find contact by name</InputText>\r\n            <ImputEnter />\r\n        </InputType>\r\n   )\r\n};\r\n\r\nFilter.prototype = {\r\n    onChange: PropTypes.func,\r\n}\r\n\r\nexport default Filter;","import './App.css';\r\nimport React, {Component} from 'react';\r\nimport {Container} from \"./Components/Container\";\r\nimport Form from \"./Components/Form\";\r\nimport { Section, Title } from \"./Components/Section\";\r\nimport ContactList from \"./Components/ContactList\";\r\nimport { nanoid } from 'nanoid';\r\nimport Filter from \"./Components/Filter\";\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n  }\r\n\r\n\r\n  addContact = ({ name, number }) => {\r\n    let array = [];\r\n    array = this.state.contacts.map(contact=>contact.name)\r\n\r\n    if (!array.includes(name)) {\r\n     const newContact = {\r\n        id: nanoid(),\r\n        name: name,\r\n        number: number\r\n      };\r\n\r\n     return  this.setState(({ contacts }) => ({\r\n        contacts: [newContact, ...contacts],\r\n      }));\r\n    } else {\r\n      alert(\"Контакт существует!\");\r\n      return;\r\n    }\r\n  };\r\n\r\n\r\n  deleteItem = itemId => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== itemId),\r\n    }));\r\n  }\r\n\r\n  filterEnter = (evt) => {\r\n    this.setState({ filter: evt.target.value });\r\n  }\r\n\r\n  filterChange = () => {\r\n   const { contacts, filter } = this.state;\r\n    const normalizeFilter = filter.toLocaleLowerCase();\r\n\r\n    return contacts.filter(contact => contact.name.toLocaleLowerCase()\r\n      .includes(normalizeFilter));\r\n  }\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n    return (\r\n      <Container>\r\n        <Section>\r\n          <Title>Phonebook</Title>\r\n          <Form onSubmit={this.addContact }/>\r\n        </Section>\r\n        <Section>\r\n          <Title>Contacts</Title>\r\n          <Filter value={filter} onChange={this.filterEnter}/>\r\n          <ContactList\r\n            contacts={this.filterChange()}\r\n            onDeleteItem={this.deleteItem} \r\n          />\r\n        </Section>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nApp.propTypes = {\r\n  state: PropTypes.objectOf(PropTypes.shape({\r\n    contacts: PropTypes.arrayOf(PropTypes.shape({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n      number:PropTypes.number\r\n    })),\r\n    filter:PropTypes.string,\r\n  })),\r\n  addContact: PropTypes.func,\r\n  deleteItem: PropTypes.func,\r\n  filterEnter: PropTypes.func,\r\n  filterChange:PropTypes.func\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}